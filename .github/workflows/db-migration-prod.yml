name: Run db migration prod (manual)

on: workflow_dispatch

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
  STAGE: prod
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
  AWS_DEFAULT_OUTPUT: json
  AWS_REGION: ${{ vars.AWS_REGION }}
  CLIENT_URL: ${{ vars.CLIENT_URL }}
  S3_BUCKET: ${{ vars.S3_BUCKET }}
  DB_HOST: ${{ vars.DB_HOST }}
  API_GW_URL: ${{ vars.API_GW_URL }}
  AWS_SECURITY_GROUP_ID: ${{ vars.AWS_SECURITY_GROUP_ID }}
  AWS_SUBNET_ID_1: ${{ vars.AWS_SUBNET_ID_1 }}
  AWS_SUBNET_ID_2: ${{ vars.AWS_SUBNET_ID_2 }}
  AWS_SUBNET_ID_3: ${{ vars.AWS_SUBNET_ID_3 }}
  AWS_SUBNET_ID_4: ${{ vars.AWS_SUBNET_ID_4 }}
  HTTP_HOST: ${{ vars.HTTP_HOST }}
jobs:
  db_migration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci
        working-directory: backend

      - name: Config serverless
        run: npx serverless config credentials --provider aws --key $AWS_ACCESS_KEY_ID --secret $AWS_SECRET_ACCESS_KEY
        working-directory: backend

      - name: Create config file
        working-directory: backend
        run: |
          config=`cat serverless.env.yml`
          config=${config//GOOGLE_CLIENT_ID_VAR/$GOOGLE_CLIENT_ID}
          config=${config//GOOGLE_CLIENT_SECRET_VAR/$GOOGLE_CLIENT_SECRET}
          base_url=https://$AM_APIGW_ID.execute-api.us-west-2.amazonaws.com/prod
          config=${config//GOOGLE_CALLBACK_BASE_URL_VAR/$API_GW_URL}
          config=${config//CLIENT_URL_VAR/$CLIENT_URL}
          config=${config//DB_HOST_VAR/$DB_HOST}
          config=${config//DB_PASSWORD_VAR/$DB_PASSWORD}
          config=${config//HTTP_HOST_VAR/$HTTP_HOST}
          printf "$config" >> serverless.config.prod.yml

      - name: serverless deploy db-migration
        run: npx serverless deploy --stage prod --verbose
        working-directory: backend/src/db-migration

      - name: invoke db-migration
        run: npx serverless invoke --stage prod --region $AWS_REGION --function dbMigration --data "foo"
        working-directory: backend/src/db-migration
